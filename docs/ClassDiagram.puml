@startuml ClassDiagram

package com.lordoftherings{
    class LordOfTheRings{
        -Army heroeArmy
        -Army beastArmy
        -Turn turn
        -CombatHistory combatHistory

        +void setup()
        +void execute()
        +void createBeastsArmy()
        +void createHeroesArmy()
    }

    class Turn{
        -Army heroeArmy
        -Army beastArmy
        -int heroeAttack
        -int beastAttack
        -int damageDealt
        -CombatHistory combatHistory

        +Turn(Army heroeArmy, Army beastArmy, CombatHistory combatHistory)
        +void combat()
        +int calculateDamageDealt()
        +void showTurnResults(int currentTurn, Creature heroe, Creature beast)
    }

    class CombatHistory{
        -int turnNumber
        -Creature winner
        -Creature loser
        -int damage

        +CombatHistory(int turnNumber, Creature winner, Creature loser, int damage)
    }

    package Creatures{
        enum CreatureType{
            HUMAN
            ELF
            HOBBIT
            ORC
            GOBLIN
        }

        abstract class Creature{
            #enum CreatureType
            -String name
            -int lifePoints
            -int shieldResistance

            +Creature(String name, int lifePoints, int shieldResistance)
            +abstract boolean isHeroe()
            +abstract int attackOpponent(Creature Creature)
            +abstract int defend(Creature Creature)
            +abstract int throwDices()
            +abstract int getCreatureType()
        }

        package heroes{
            abstract class Heroe{
                +boolean isHeroe()
                +int throwDices()
                +abstract boolean fears(Creature Creature)
                +abstract boolean hates(Creature Creature)
                +abstract int attackOpponent(Creature Creature)
                +abstract int defend(Creature Creature)
                +abstract int getCreatureType()
            }

            class Human{            
                +int getCreatureType()
                +int attackOpponent(Creature Creature)
                +int defend(Creature Creature)
                +boolean fears(Creature Creature)
                +boolean hates(Creature Creature)
            }

            class Elf{
                +int getCreatureType()
                +int attackOpponent(Creature Creature)
                +int defend(Creature Creature)
                +boolean fears(Creature Creature)
                +boolean hates(Creature Creature)
            }

            class Hobbit{
                +int getCreatureType()
                +int attackOpponent(Creature Creature)
                +int defend(Creature Creature)
                +boolean fears(Creature Creature)
                +boolean hates(Creature Creature)
            }
        }

        package beasts{
            abstract class Beast{
                +boolean isHeroe()
                +int throwDices()
                +abstract boolean extraPower()
                +abstract int attackOpponent(Creature Creature)
                +abstract int defend(Creature Creature)
                +abstract int getCreatureType()
            }

            class Orc{
                +boolean extraPower()
                +int attackOpponent(Creature Creature)
                +int defend(Creature Creature)
                +int getCreatureType()
            }

            class Goblin{
                +boolean extraPower()
                +int attackOpponent(Creature Creature)
                +int defend(Creature Creature)
                +int getCreatureType()
            }
        }
    }

    class Army{
        -ArrayList<Creature> army

        +Army()
        +ArrayList<Creature> getArmy()
        +void setArmy(Creature Creature)
    }

    package creatureFactory {
        interface AbstractCreatureFactory {
        Creature createCreature()
    }

    class HeroesFactory {
        +Heroe createCreature()
    }

    class BeastsFactory {
        +Beast createCreature()
    }

    }


}

LordOfTheRings *-- Turn
LordOfTheRings *-- Army

Army *-- Creature

Creature <|-- Heroe
Creature <|-- Beast

Heroe <|-- Human
Heroe <|-- Elf
Heroe <|-- Hobbit

Beast <|-- Orc
Beast <|-- Goblin

CombatHistory <-- Turn

LordOfTheRings ..> AbstractCreatureFactory
AbstractCreatureFactory <|-- HeroesFactory
AbstractCreatureFactory <|-- BeastsFactory

@enduml